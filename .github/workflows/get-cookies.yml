name: Extract Cookies

on:
  workflow_dispatch:  # Allows manual triggering
    inputs:
      test_run:
        description: 'Test run (optional)'
        required: false
        default: 'false'
      force_rebuild:
        description: 'Force rebuild Docker image'
        required: false
        default: 'false'
  push:
    paths:
      - 'Dockerfile'  # Rebuild image when Dockerfile changes

jobs:
  # Build Docker image
  build-image:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Check if image exists
      id: check-image
      run: |
        if docker manifest inspect ghcr.io/${{ github.repository }}/cookie-extractor:latest >/dev/null 2>&1; then
          echo "exists=true" >> $GITHUB_OUTPUT
        else
          echo "exists=false" >> $GITHUB_OUTPUT
        fi
      continue-on-error: true
        
    - name: Build and push Docker image
      if: steps.check-image.outputs.exists == 'false' || github.event.inputs.force_rebuild == 'true' || github.event_name == 'push'
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ghcr.io/${{ github.repository }}/cookie-extractor:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max

  # Extract cookies using Docker container
  extract-cookies:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/${{ github.repository }}/cookie-extractor:latest
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    needs: [build-image]
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Verify environment
      run: |
        echo "Python version: $(python --version)"
        echo "Chrome version: $(google-chrome --version)"
        echo "SeleniumBase installed: $(pip show seleniumbase | grep Version)"
        
    - name: Extract cookies
      env:
        SOLVECAPTCHA_API_KEY: ${{ secrets.SOLVECAPTCHA_API_KEY }}
      run: |
        python solve_captcha_get_cookies.py
        
    - name: Upload cookies as artifact
      uses: actions/upload-artifact@v4
      with:
        name: cookies-${{ github.run_number }}
        path: cookies.json
        retention-days: 1
        
    - name: Show cookies (for debugging)
      run: |
        echo "Cookies extracted successfully!"
        if [ -f cookies.json ]; then
          echo "Cookie file size: $(wc -c < cookies.json) bytes"
          echo "Number of cookies: $(jq 'length' cookies.json)"
        fi
